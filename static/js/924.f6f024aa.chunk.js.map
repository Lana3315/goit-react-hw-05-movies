{"version":3,"file":"static/js/924.f6f024aa.chunk.js","mappings":"6KAqBA,IAjBa,SAAC,GAAsB,IAApBA,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MACXC,EAAMH,EAAS,UAAY,GAEjC,OACE,eAAII,UAAWC,EAAAA,EAAAA,KAAf,SACGN,EAAKO,KAAI,SAAAC,GAAE,OACV,eAAgBH,UAAWC,EAAAA,EAAAA,KAA3B,UACE,SAAC,KAAD,CAAMG,GAAE,UAAKL,GAAL,OAAWI,EAAGE,IAAMC,MAAO,CAAEC,KAAMV,GAAYG,UAAWC,EAAAA,EAAAA,KAAlE,SACGE,EAAGK,SAFCL,EAAGE,GADF,KASjB,C,sDClBD,MAA0B,yB,SCI1B,EAHgB,SAAC,GAAkB,IAAhBI,EAAe,EAAfA,SACjB,OAAO,oBAAST,UAAWC,EAApB,SAAkCQ,GAC1C,C,gKCHD,EAAuB,yBAAvB,EAAwD,0BAAxD,EAAwF,wB,SC6CxF,EAxCmB,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,cAAeC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5C,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAyBA,OACE,kBAAMC,SApBa,SAAAC,GAEnB,GADAA,EAAEC,iBACY,KAAVJ,EAAJ,CACAF,EAAgB,CAAEE,MAAAA,IAElB,IAAMK,EAAK,mCAAG,2FACZT,EAAcU,EAAAA,EAAAA,SADF,kBAGaC,EAAAA,EAAAA,OAAWP,EAAO,GAH/B,OAGJQ,EAHI,OAIVX,EAAQW,EAASC,SACjBb,EAAcU,EAAAA,EAAAA,QALJ,gDAOVI,QAAQC,IAAR,MACAf,EAAcU,EAAAA,EAAAA,MARJ,yDAAH,qDAWXD,GAdwB,CAezB,EAG+BnB,UAAWC,EAAzC,WACE,kBACEyB,KAAK,OACLC,KAAK,QACLC,MAAOd,EACPe,SA7BoB,SAAAZ,GACxBF,EAASE,EAAEa,OAAOF,MAAMG,YACzB,EA4BK/B,UAAWC,KAEb,mBAAQyB,KAAK,SAAS1B,UAAWC,EAAjC,sBAGL,E,SC3CD,EAAwB,sBCwDxB,EA/Ce,WAAO,IAAD,EACnB,GAAwC+B,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBrB,EAArB,KACA,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOlB,EAAP,KAAagB,EAAb,KACA,GAAwBE,EAAAA,EAAAA,UAAS,GAAjC,eAAOqB,EAAP,KAAaC,EAAb,KACA,GAAoCtB,EAAAA,EAAAA,UAASO,EAAAA,EAAAA,OAA7C,eAAOgB,EAAP,KAAmB1B,EAAnB,KAEM2B,EAAQ,UAAGJ,EAAaK,IAAI,gBAApB,QAAgC,GAmB9C,OAjBAC,EAAAA,EAAAA,YAAU,WACR,GAAiB,KAAbF,EAAJ,CACAF,EAAQ,GACR,IAAMhB,EAAK,mCAAG,2FACZT,EAAcU,EAAAA,EAAAA,SADF,kBAGaC,EAAAA,EAAAA,OAAWgB,EAAUH,GAHlC,OAGJZ,EAHI,OAIVX,EAAQW,EAASC,SACjBb,EAAcU,EAAAA,EAAAA,QALJ,gDAOVI,QAAQC,IAAR,MACAf,EAAcU,EAAAA,EAAAA,MARJ,yDAAH,qDAWXD,GAb2B,CAc5B,GAAE,CAACe,EAAKG,KAGP,UAACG,EAAA,EAAD,YACE,SAAC,EAAD,CACE9B,cAAeA,EACfC,QAASA,EACTC,gBAAiBA,IAElBwB,IAAehB,EAAAA,EAAAA,QAAiC,IAAhBzB,EAAK8C,QAA6B,KAAbJ,IACpD,eAAGrC,UAAWC,EAAd,4BAAyCoC,KAE1CD,IAAehB,EAAAA,EAAAA,QAAiC,IAAhBzB,EAAK8C,SACpC,eAAGzC,UAAWC,EAAd,yCAAsDoC,KAEvDD,IAAehB,EAAAA,EAAAA,QAAiC,IAAhBzB,EAAK8C,QAA6B,KAAbJ,IACpD,SAACK,EAAA,EAAD,CAAM/C,KAAMA,EAAMC,QAAQ,IAE3BwC,IAAehB,EAAAA,EAAAA,UAAkB,SAACuB,EAAA,EAAD,IACjCP,IAAehB,EAAAA,EAAAA,OAAe,cAAGpB,UAAWC,EAAd,qBAGpC,C","sources":["components/List/List.jsx","webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://react-homework-template/./src/components/FormSearch/FormSearch.module.css?aeb4","components/FormSearch/FormSearch.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport css from './List.module.css';\nimport PropTypes from 'prop-types';\n\nconst List = ({ data, isHome }) => {\n  const location = useLocation();\n  const url = isHome ? 'movies/' : '';\n\n  return (\n    <ul className={css.list}>\n      {data.map(el => (\n        <li key={el.id} className={css.item}>\n          <Link to={`${url}${el.id}`} state={{ from: location }} className={css.link}>\n            {el.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default List;\n\nList.propTypes = {\n  data: PropTypes.array.isRequired,\n  isHome: PropTypes.bool,\n};","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\"};","import PropTypes from 'prop-types';\nimport css from './Section.module.css';\nconst Section = ({ children }) => {\n  return <section className={css.section}>{children}</section>;\n};\nexport default Section;\n\nSection.propTypes = {\n  children: PropTypes.array,\n};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"FormSearch_form__C2tvL\",\"input\":\"FormSearch_input__Nqpbg\",\"btn\":\"FormSearch_btn__5z4Kb\"};","import { useState } from 'react';\nimport api from '../../services/api';\nimport css from './FormSearch.module.css';\nimport status from '../../services/status';\nimport PropTypes from 'prop-types';\n\nconst FormSearch = ({ setStatusPage, setData, setSearchParams }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChangeInput = e => {\n    setQuery(e.target.value.trimStart());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query === '') return;\n    setSearchParams({ query });\n\n    const fetch = async () => {\n      setStatusPage(status.LOADING);\n      try {\n        const response = await api.search(query, 1);\n        setData(response.results);\n        setStatusPage(status.FINISH);\n      } catch (error) {\n        console.log(error);\n        setStatusPage(status.EROR);\n      }\n    };\n    fetch();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <input\n        type=\"text\"\n        name=\"query\"\n        value={query}\n        onChange={handleChangeInput}\n        className={css.input}\n      />\n      <button type=\"submit\" className={css.btn}>Search</button>\n    </form>\n  );\n};\n\nexport default FormSearch;\n\nFormSearch.propTypes = {\n  setStatusPage: PropTypes.func,\n  setData: PropTypes.func,\n  setSearchParams: PropTypes.func,\n};","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Movies_title__MDLXB\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Section from '../../components/Section/Section';\nimport ListSkeleton from '../../components/List/ListSkeleton';\nimport status from '../../services/status';\nimport api from 'services/api';\nimport FormSearch from '../../components/FormSearch/FormSearch';\nimport List from '../../components/List/List';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [data, setData] = useState([]);\n  const [page, setPage] = useState(1);\n  const [statusPage, setStatusPage] = useState(status.START);\n\n  const queryURL = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (queryURL === '') return;\n    setPage(1);\n    const fetch = async () => {\n      setStatusPage(status.LOADING);\n      try {\n        const response = await api.search(queryURL, page);\n        setData(response.results);\n        setStatusPage(status.FINISH);\n      } catch (error) {\n        console.log(error);\n        setStatusPage(status.EROR);\n      }\n    };\n    fetch();\n  }, [page,queryURL]);\n\n  return (\n    <Section>\n      <FormSearch\n        setStatusPage={setStatusPage}\n        setData={setData}\n        setSearchParams={setSearchParams}\n      />\n      {statusPage === status.FINISH && data.length !== 0 && queryURL !== '' && (\n        <p className={css.title}>Search result: {queryURL}</p>\n      )}\n      {statusPage === status.FINISH && data.length === 0 && (\n        <p className={css.title}>Your request was not found: {queryURL}</p>\n      )}\n      {statusPage === status.FINISH && data.length !== 0 && queryURL !== '' && (\n        <List data={data} isHome={false} />\n      )}\n      {statusPage === status.LOADING && <ListSkeleton />} \n      {statusPage === status.EROR && <p className={css.title}>Erorr</p>}\n    </Section>\n  );\n};\n\nexport default Movies;"],"names":["data","isHome","location","useLocation","url","className","css","map","el","to","id","state","from","title","children","setStatusPage","setData","setSearchParams","useState","query","setQuery","onSubmit","e","preventDefault","fetch","status","api","response","results","console","log","type","name","value","onChange","target","trimStart","useSearchParams","searchParams","page","setPage","statusPage","queryURL","get","useEffect","Section","length","List","ListSkeleton"],"sourceRoot":""}